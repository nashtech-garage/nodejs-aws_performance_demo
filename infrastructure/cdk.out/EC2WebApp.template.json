{
 "Resources": {
  "VPC61AD6880": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "EC2WebApp/VPC/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/VPC/VPC/Resource"
   }
  },
  "VPCServerPublicSubnet1SubnetF3987995": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "ServerPublic"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "EC2WebApp/VPC/VPC/ServerPublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPC61AD6880"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/VPC/VPC/ServerPublicSubnet1/Subnet"
   }
  },
  "VPCServerPublicSubnet1RouteTable140320E2": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "EC2WebApp/VPC/VPC/ServerPublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPC61AD6880"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/VPC/VPC/ServerPublicSubnet1/RouteTable"
   }
  },
  "VPCServerPublicSubnet1RouteTableAssociationBCA9EE21": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCServerPublicSubnet1RouteTable140320E2"
    },
    "SubnetId": {
     "Ref": "VPCServerPublicSubnet1SubnetF3987995"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/VPC/VPC/ServerPublicSubnet1/RouteTableAssociation"
   }
  },
  "VPCServerPublicSubnet1DefaultRoute0DEC8857": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWE1DD60CF"
    },
    "RouteTableId": {
     "Ref": "VPCServerPublicSubnet1RouteTable140320E2"
    }
   },
   "DependsOn": [
    "VPCVPCGW3AFA48F6"
   ],
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/VPC/VPC/ServerPublicSubnet1/DefaultRoute"
   }
  },
  "VPCServerPublicSubnet2SubnetDB508B90": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "ServerPublic"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "EC2WebApp/VPC/VPC/ServerPublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPC61AD6880"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/VPC/VPC/ServerPublicSubnet2/Subnet"
   }
  },
  "VPCServerPublicSubnet2RouteTableD6971BF3": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "EC2WebApp/VPC/VPC/ServerPublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPC61AD6880"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/VPC/VPC/ServerPublicSubnet2/RouteTable"
   }
  },
  "VPCServerPublicSubnet2RouteTableAssociationE261CDCA": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCServerPublicSubnet2RouteTableD6971BF3"
    },
    "SubnetId": {
     "Ref": "VPCServerPublicSubnet2SubnetDB508B90"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/VPC/VPC/ServerPublicSubnet2/RouteTableAssociation"
   }
  },
  "VPCServerPublicSubnet2DefaultRoute6A434666": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWE1DD60CF"
    },
    "RouteTableId": {
     "Ref": "VPCServerPublicSubnet2RouteTableD6971BF3"
    }
   },
   "DependsOn": [
    "VPCVPCGW3AFA48F6"
   ],
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/VPC/VPC/ServerPublicSubnet2/DefaultRoute"
   }
  },
  "VPCIGWE1DD60CF": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "EC2WebApp/VPC/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/VPC/VPC/IGW"
   }
  },
  "VPCVPCGW3AFA48F6": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VPCIGWE1DD60CF"
    },
    "VpcId": {
     "Ref": "VPC61AD6880"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/VPC/VPC/VPCGW"
   }
  },
  "VPCRestrictDefaultSecurityGroupCustomResourceDF1EE3A6": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "VPC61AD6880",
      "DefaultSecurityGroup"
     ]
    },
    "Account": "716114214401"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/VPC/VPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "VPCSSHSecurityGroup0495A24F": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security Group for SSH",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "from 0.0.0.0/0:22",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTP Traffic from any where",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow Web Next.js run port 8080",
      "FromPort": 8080,
      "IpProtocol": "tcp",
      "ToPort": 8080
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow Web Nest.js run port 3000",
      "FromPort": 3000,
      "IpProtocol": "tcp",
      "ToPort": 3000
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTPS Traffic from any where",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Ref": "VPC61AD6880"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/VPC/SSHSecurityGroup/Resource"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:us-east-1:716114214401:security-group/",
             {
              "Fn::GetAtt": [
               "VPC61AD6880",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-716114214401-us-east-1",
     "S3Key": "7f18a11296f35510ee16538afec983ed6312e12afbf81b777089a9f8e34e2474.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.7f18a11296f35510ee16538afec983ed6312e12afbf81b777089a9f8e34e2474",
    "aws:asset:property": "Code"
   }
  },
  "EC2serverEc2Role6775A3D4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/CloudWatchAgentServerPolicy"
       ]
      ]
     }
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "logs:PutRetentionPolicy",
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "RetentionPolicy"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/EC2/serverEc2Role/Resource"
   }
  },
  "EC2ec2InstanceSecurityGroupD268D496": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "EC2WebApp/EC2/ec2InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VPC61AD6880"
    }
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/EC2/ec2InstanceSecurityGroup/Resource"
   }
  },
  "EC2webappServerInstanceProfileA955497B": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "EC2serverEc2Role6775A3D4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/EC2/webappServer/InstanceProfile"
   }
  },
  "EC2webappServer3EB4F81A": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "IamInstanceProfile": {
     "Ref": "EC2webappServerInstanceProfileA955497B"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "m7g.large",
    "KeyName": "vuilendi-fund-ec2",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "EC2ec2InstanceSecurityGroupD268D496",
       "GroupId"
      ]
     },
     {
      "Fn::GetAtt": [
       "VPCSSHSecurityGroup0495A24F",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VPCServerPublicSubnet1SubnetF3987995"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "EC2WebApp/EC2/webappServer"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\nyum update -y\ncurl -sL https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo\ncurl -sL https://rpm.nodesource.com/setup_20.x | sudo -E bash - \nyum install -y amazon-cloudwatch-agent nodejs python3-pip zip unzip docker yarn\nsudo systemctl enable docker\nsudo systemctl start docker\nsudo dnf update\nsudo dnf install -y nginx\nsudo systemctl start nginx.service\nsudo systemctl status nginx.service\nsudo systemctl enable nginx.service"
    }
   },
   "DependsOn": [
    "EC2serverEc2Role6775A3D4"
   ],
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/EC2/webappServer/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21QTW/CMAz9LdzTrHDaFXFAnFa1iOuUpoYZGqdKbBCq+t+XrmXVpEmR/N6znz+y0es81/nKPGJmm1vWYq37io29qSR99mA3uj91Vu3OdCp2qpC6RVtJTcCjtqDSC8PR1C0s+qJtY/QWDaOn3+IRHIghpMq9YXiY5zxmZltOi3w5IFYVWAnIz33w0v0M+CMcKLIhO7ec8KDQON2XftroFV/pIvgztjAMqoToJYxmiezdQpPp/1Ty3rGBoNJZwOm7LkiXsb4wwThIJ43kQ7gTHhT5BvQ1vt3X7zq9fHWNiFkQYnSgyyl+AyFP/DWJAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "EC2WebApp/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-arm64"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Outputs": {
  "ssmCommand": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "aws ssm start-session --target ",
      {
       "Ref": "EC2webappServer3EB4F81A"
      }
     ]
    ]
   }
  },
  "sshCommand": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "ssh ec2-user@",
      {
       "Fn::GetAtt": [
        "EC2webappServer3EB4F81A",
        "PublicDnsName"
       ]
      }
     ]
    ]
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}